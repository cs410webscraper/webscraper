<script>
    let selectedEvent;
    let selectedDay;
    let selectedMonth;
    let selectedMonthStr;
    let selectedYear;

    var event_data = {
        "events": []
    };

  // Setup the calendar with the current date
    $(document).ready(function(){
        updateEvents(listOfEvents); // self function
        var date = new Date();
        var today = date.getDate();
        // Set click handlers for DOM elements
        $(".right-button").click({date: date}, next_year);
        $(".left-button").click({date: date}, prev_year);
        $(".month").click({date: date}, month_click);
        // Set current month as active
        $(".months-row").children().eq(date.getMonth()).addClass("active-month");
        init_calendar(date);
        var events = check_events(today, date.getMonth()+1, date.getFullYear());
        show_events(events, months[date.getMonth()], today);
    });

    // Initialize the calendar by appending the HTML dates
    function init_calendar(date) {
        $(".tbody").empty();
        $(".events-container").empty();
        var calendar_days = $(".tbody");
        var month = date.getMonth();
        var year = date.getFullYear();
        var day_count = days_in_month(month, year);
        var row = $("<tr class='table-row'></tr>");
        var today = date.getDate();
        // Set date to 1 to find the first day of the month
        date.setDate(1);
        var first_day = date.getDay();
        // 35+firstDay is the number of date elements to be added to the dates table
        // 35 is from (7 days in a week) * (up to 5 rows of dates in a month)
        for(var i=0; i<35+first_day; i++) {
            // Since some of the elements will be blank, 
            // need to calculate actual date from index
            var day = i-first_day+1;
            // If it is a sunday, make a new row
            if(i%7===0) {
                calendar_days.append(row);
                row = $("<tr class='table-row'></tr>");
            }
            // if current index isn't a day in this month, make it blank
            if(i < first_day || day > day_count) {
                var curr_date = $("<td class='table-date nil'>"+"</td>");
                row.append(curr_date);
            }   
            else {
                var curr_date = $("<td class='table-date'>"+day+"</td>");
                var events = check_events(day, month+1, year);
                if(today===day && $(".active-date").length===0) {
                    curr_date.addClass("active-date");
                    show_events(events, months[month], day);
                }
                // If this date has any events, style it with .event-date
                if(events.length!==0) {
                    curr_date.addClass("event-date");
                    // console.log(events);
                    for (let e = 0; e < events.length; e++) {
                        for(let o = 0; o < events[e].organizationInfo.length; o++) {
                            if (events[e].organizationInfo[o].name == "Glorious Recovery") {
                                curr_date.addClass("event-date-special");
                            }
                        }
                    }
                }
                // Set onClick handler for clicking a date
                curr_date.click({events, year, month, day}, date_click);
                row.append(curr_date);
            }
        }
        // Append the last row and set the current year
        calendar_days.append(row);
        $(".year").text(year);
    }

    // Get the number of days in a given month/year
    function days_in_month(month, year) {
        var monthStart = new Date(year, month, 1);
        var monthEnd = new Date(year, month + 1, 1);
        return (monthEnd - monthStart) / (1000 * 60 * 60 * 24);    
    }

    // Event handler for when a date is clicked
    function date_click(event) {
        selectedDay = event.data.day;
        selectedMonth = event.data.month+1;
        selectedYear = event.data.year;
        selectedMonthStr = months[event.data.month];
        selectedEvent = check_events(selectedDay, selectedMonth, selectedYear);
        $(".events-container").show(250);
        $("#dialog").hide(250);
        $(".active-date").removeClass("active-date");
        $(this).addClass("active-date");
        show_events(selectedEvent, selectedMonthStr, selectedDay);
    };

    // Event handler for when a month is clicked
    function month_click(event) {
        $(".events-container").show(250);
        $("#dialog").hide(250);
        var date = event.data.date;
        $(".active-month").removeClass("active-month");
        $(this).addClass("active-month");
        var new_month = $(".month").index(this);
        date.setMonth(new_month);
        init_calendar(date);
    }

    // Event handler for when the year right-button is clicked
    function next_year(event) {
        $("#dialog").hide(250);
        var date = event.data.date;
        var new_year = date.getFullYear()+1;
        $("year").html(new_year);
        date.setFullYear(new_year);
        init_calendar(date);
    }

    // Event handler for when the year left-button is clicked
    function prev_year(event) {
        $("#dialog").hide(250);
        var date = event.data.date;
        var new_year = date.getFullYear()-1;
        $("year").html(new_year);
        date.setFullYear(new_year);
        init_calendar(date);
    }

    // Display all events of the selected date in card views
    function show_events(events, month, day) {
        // Clear the dates container
        $(".events-container").empty();
        $(".events-container").show(250);
        // console.log(event_data["events"]);
        // If there are no events for this date, notify the user
        if(events.length===0) {
            var event_card = $("<div class='event-card'></div>");
            var event_name = $("<div class='event-name'>There are no events for "+month+" "+day+".</div>");
            $(event_card).css({ "border-left": "10px solid #FF1744" });
            $(event_card).append(event_name);
            $(".events-container").append(event_card);
        }
        else {
            // Go through and add each event as a card to the events container
            for(var i=0; i<events.length; i++) {
                let eventCard = $("<div class='event-card'></div>");
                let eventTicket;
                let eventImage;
                if (events[i].isManuallyAdded) { 
                    let buf = buffer.Buffer.from((events[i].image.data)).toString('base64');
                    eventImage = $(`<img class="img-fluid w-100 rounded" src="data:image/${events[i].image.contentType};base64,${buf}" alt="Image">`);

                    if (events[i].ticket) {
                        eventTicket = $(
                        `<a href="${events[i].ticketLink}" class="text-decoration-none" >
                            <h5 class="text-dark bg-warning">Tickets available here</h5>
                        </a>`)
                    }
                } else {
                    eventImage = $(`<img class="img-fluid w-100 rounded" src="${events[i].image}" alt="Image" />`);
                    if (events[i].ticket) {
                        eventTicket = $(
                        `<a href="${events[i].ticketLink}" class="text-decoration-none" >
                            <h5 class="text-dark bg-warning">Tickets available here</h5>
                        </a>`)
                    }
                }

                let eventTitle = $(`<a href="${events[i].linkToOriginalPost}"><h4>${events[i].title}</h4></a>`);
                let eventLocation = $(`<h5>Location: ${events[i].location}</h5>`);

                // Date Time
                let timeContainer = document.createElement('h7');
                timeContainer.classList.add("text-danger");
                timeContainer.innerText = events[i].dateTime;
                if (events[i].endTime) {
                    timeContainer.innerText += " â€“ " + events[i].endTime;
                }
                
                // $(eventCard).append(eventImage).append(eventTitle);
                $(eventCard).append(eventImage).append(eventTicket).append(timeContainer).append(eventTitle).append(eventLocation);
                $(".events-container").append(eventCard);
            }
        }
    }


    // Checks if a specific date has any events
    function check_events(day, month, year) {
        var events = [];
        for(var i=0; i<event_data["events"].length; i++) {
            var event = event_data["events"][i];
            if(event["day"]===day &&
                event["month"]===month &&
                event["year"]===year) {
                    events.push(event);
                }
        }
        return events;
    }


    const months = [ 
        "January", 
        "February", 
        "March", 
        "April", 
        "May", 
        "June", 
        "July", 
        "August", 
        "September", 
        "October", 
        "November", 
        "December" 
    ];

    // self functions
    function updateEvents(listOfEvents) {
        event_data.events = [];
        
        for (let i = 0; i < listOfEvents.length; i++) {
            let object = {};
            let date = new Date(listOfEvents[i].dateObject);
            object.year = date.getFullYear();
            object.month = date.getMonth() + 1;
            object.day = date.getDate();
            event_data.events.push(object);
            
            object.title = listOfEvents[i].title;
            object.ticket = listOfEvents[i].ticket;
            object.ticketLink = listOfEvents[i].ticketLink;
            object.image = listOfEvents[i].image;
            object.linkToOriginalPost = listOfEvents[i].linkToOriginalPost;
            object.organizationInfo = listOfEvents[i].organizationInfo;
            object.isManuallyAdded = listOfEvents[i].isManuallyAdded;
            object.location = listOfEvents[i].location;
            object.dateTime = listOfEvents[i].dateTime;
            object.endTime = listOfEvents[i].endTime;
        }
        selectedEvent = check_events(selectedDay, selectedMonth, selectedYear);
        show_events(selectedEvent, selectedMonthStr, selectedDay);
    }
</script>